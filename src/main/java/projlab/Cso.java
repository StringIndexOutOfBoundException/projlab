package projlab;

import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;

/**
 * A csõ osztály a pálya egy passzív eleme.
 * Õ felelõs a víz szállításáért.
 * Ha kijukad akkor a benne levõ víz kifolyik és a sivatagban elveszik.
 */
public class Cso extends Mezo {
	//private int maxJatekosok = 1;

	/**
	 * A csõ konstruktora
	 * Beállítja a maxJatekosok változót 1-re
	 */
	public Cso() {
		super(1);
	}
	private int vizmennyiseg;

	public void Megjavit() {
	}

	public void PumpaEpit() {
	}

	/**
	 * A függvény kilyukasztja a csövet, azaz átálllítja a mukodik változoót arra, hogy nem mûködik (false)
	 * @Override
	 */
	@Override
	public void Kilyukaszt() {
		System.out.println("Függvényhívás: " + this + "Kilyukaszt()");
		super.setMukodik(true);
	}

	/**
	 * <p>A függvény megnöveli a csõbe levõ víz mennyiségét megadott értékkel (nem növekedhet MAXVÍZ felé).</p>
	 * Ezt a Pumpa {@link Pumpa}, Forrás {@link Forras}  fogja meghívni
	 * @param meret a víz mennysége amit a csõbe pumpálunk
	 * @override
	 */
	@Override
	public void VizetNovel(int meret) {
		System.out.println("Függvényhívás: " + this +": VizetNovel( " + meret + ") ");
		if(meret + vizmennyiseg > 1){	//MAXVIZ
			throw new BufferOverflowException();
		}
		else {
			vizmennyiseg += meret;
		}
	}

	/**
	 * <p>A függvény csökkenti a csõbe levõ víz mennyiségét megadott értékkel (nem csökkenhet 0 alá).</p>
	 * Ezt a Pumpa {@link Pumpa}, Forrás {@link Ciszterna}  fogja meghívni
	 * @param meret a víz mennysége amit a csõbõl kiszívunk.
	 */
	@Override
	public void VizetCsokkent(int meret) {
		System.out.println("Függvényhívás: " + this +": VizetCsokkent( " + meret + ") ");

		if(meret < vizmennyiseg) {
			vizmennyiseg -= meret;
		}
		else{ throw new BufferUnderflowException();}

	}

	/**
	 * Ez a vizmennyiség változóhoz egy getter, visszaadja a csõben levõ víz értkét
	 * @return int típusú, azt adja vissza, hogy mennyi víz van a csõben éppen.
	 */
	public int getVizmennyiseg(){
		return vizmennyiseg;
	}

}
